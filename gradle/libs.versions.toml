[versions]
appcompat = "1.6.1"
biometricKtx = "1.1.0"
bouncy-castle = "1.77"
cbor = "0.9"
coseJava = "1.1.0"
dependency-license-report = "2.4"
dependencycheck = "9.0.9"
espresso-contrib = "3.5.1"
espresso-core = "3.5.1"
eudi-document-manager = "0.4.0-LOCAL1-SNAPSHOT"
eudi-iso18013-data-transfer = "0.2.0-SNAPSHOT"
eudi-lib-jvm-openid4vci-kt = "0.3.2-SNAPSHOT"
eudi-lib-jvm-siop-openid4vp-kt = "0.4.2"
gradle-plugin = "7.4.0"
identity-credential = "20231002"
identity-credential-android = "20231002"
java = "1.8"
json = "20210307"
junit = "4.13.2"
junit-android = "1.1.5"
kotlin = "1.8.10"
ktor = "2.3.5"
mavenPublish = "0.25.3"
mockito-android = "4.0.0"
mockito-inline = "4.0.0"
mockk = "1.13.5"
nimbus-sdk = "11.8"
sonarqube = "4.4.1.3373"
test-core = "1.4.0"
test-rules = "1.4.0"
test-runner = "1.4.0"
upokecenter-cbor = "4.5.2"
kotlin-coroutines-test = "1.3.1"

[libraries]
android-identity-credential = { module = "com.android.identity:identity-credential-android", version.ref = "identity-credential-android" }
android-junit = { module = "androidx.test.ext:junit", version.ref = "junit-android" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
biometric-ktx = { group = "androidx.biometric", name = "biometric-ktx", version.ref = "biometricKtx" }
bouncy-castle-pkix = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncy-castle" }
bouncy-castle-prov = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncy-castle" }
cbor = { module = "co.nstant.in:cbor", version.ref = "cbor" }
cose-java = { module = "com.augustcellars.cose:cose-java", version.ref = "coseJava" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "espresso-contrib" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso-core" }
eudi-document-manager = { module = "eu.europa.ec.eudi:eudi-lib-android-wallet-document-manager", version.ref = "eudi-document-manager" }
eudi-iso18013-data-transfer = { module = "eu.europa.ec.eudi:eudi-lib-android-iso18013-data-transfer", version.ref = "eudi-iso18013-data-transfer" }
eudi-lib-jvm-openid4vci-kt = { module = "eu.europa.ec.eudi:eudi-lib-jvm-openid4vci-kt", version.ref = "eudi-lib-jvm-openid4vci-kt" }
eudi-lib-jvm-siop-openid4vp-kt = { module = "eu.europa.ec.eudi:eudi-lib-jvm-siop-openid4vp-kt", version.ref = "eudi-lib-jvm-siop-openid4vp-kt" }
identity-credential = { module = "com.android.identity:identity-credential", version.ref = "identity-credential" }
json = { module = "org.json:json", version.ref = "json" }
junit = { module = "junit:junit", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito-android" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-inline" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
nimbus-oauth2-oidc-sdk = { module = "com.nimbusds:oauth2-oidc-sdk", version.ref = "nimbus-sdk" }
test-core = { module = "androidx.test:core", version.ref = "test-core" }
test-coreKtx = { module = "androidx.test:core-ktx", version.ref = "test-core" }
test-rules = { module = "androidx.test:rules", version.ref = "test-rules" }
test-runner = { module = "androidx.test:runner", version.ref = "test-runner" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines-test" }
upokecenter-cbor = { module = "com.upokecenter:cbor", version.ref = "upokecenter-cbor" }

[plugins]
android-library = { id = "com.android.library", version.ref = "gradle-plugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin" }
dependency-license-report = { id = "com.github.jk1.dependency-license-report", version.ref = "dependency-license-report" }
dependencycheck = { id = "org.owasp.dependencycheck", version.ref = "dependencycheck" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }